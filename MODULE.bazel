module(
    name = "template_repo",
    version = "0.1.0",
)

bazel_dep(name = "buildifier_prebuilt", version = "8.2.0.2")
bazel_dep(name = "rules_python", version = "1.5.3")
bazel_dep(name = "rules_shell", version = "0.6.1")
bazel_dep(name = "rules_cc", version = "0.2.9")
bazel_dep(name = "eigen", version = "5.0.0")

bazel_dep(
    name = "bazel_clang_format",
    version = "0.0.1",
    dev_dependency = True,
)

## llvm toolchain
bazel_dep(name = "toolchains_llvm", version = "1.5.0")

# Configure and register the toolchain.
llvm = use_extension("@toolchains_llvm//toolchain/extensions:llvm.bzl", "llvm")
llvm.toolchain(
    name = "llvm_toolchain_21",
    llvm_version = "21.1.0",
)
use_repo(llvm, "llvm_toolchain_21")

register_toolchains("@llvm_toolchain_21//:all")

## hedron compile flags
# Hedron's Compile Commands Extractor for Bazel
# https://github.com/hedronvision/bazel-compile-commands-extractor
bazel_dep(name = "hedron_compile_commands", dev_dependency = True)
git_override(
    module_name = "hedron_compile_commands",
    commit = "abb61a688167623088f8768cc9264798df6a9d10",
    remote = "https://github.com/hedronvision/bazel-compile-commands-extractor.git",
    # Replace the commit hash (above) with the latest (https://github.com/hedronvision/bazel-compile-commands-extractor/commits/main).
    # Even better, set up Renovate and let it do the work for you (see "Suggestion: Updates" in the README).
)

## Python specific configs
python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    # We can specify the exact version.
    python_version = "3.12.3",
)

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "py_deps",
    python_version = "3.12.3",
    requirements_lock = "//third_party/python:requirements_lock.txt",
)
use_repo(pip, "py_deps")

ruff = use_extension("//tools/lint:ruff.bzl", "ruff")
use_repo(ruff, "ruff-linux")

## clang-tidy
git_override(
    module_name = "bazel_clang_tidy",
    commit = "496018e020cf0a7d813a2b5a9d246ec55340a7ed",
    remote = "https://github.com/erenon/bazel_clang_tidy.git",
)

bazel_dep(name = "bazel_clang_tidy")

## rules ros2
bazel_dep(name = "fmt", version = "12.0.0") # com_github_mvukov_rules_ros2 breaks without this
bazel_dep(name = "com_github_mvukov_rules_ros2", version = "0.0.0-20250612-f0d04fe")

rules_ros2_non_module_deps = use_extension("@com_github_mvukov_rules_ros2//ros2:extensions.bzl", "non_module_deps")
use_repo(
    rules_ros2_non_module_deps,
    # Check the rules_ros2 root MODULE.bazel for a full list of available non-module repos
    # Required for bazel test:
    "ros2_common_interfaces",
    "ros2_geometry2",
    "ros2_launch",
    "ros2_launch_ros",
    "ros2_message_filters",
    "ros2_rcl_interfaces",
    "ros2_rclcpp",
    "ros2_rcutils",
    "ros2_robot_state_publisher",
    "ros2_unique_identifier_msgs",
    "ros2cli",
    "ros2_rosbag2",
    # Required for bazel run:
    "ros2_rclpy",
    "ros2_rosidl",
)
